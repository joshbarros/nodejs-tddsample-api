version: '3.8'

services:
  # Mars Rover API Service (Production)
  mars-rover-api:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    ports:
      - "3001:3000"
    environment:
      - NODE_ENV=production
      - PORT=3000
      - LOG_LEVEL=info
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Development Service with Hot Reloading
  dev:
    build:
      context: .
      dockerfile: dev.Dockerfile
    ports:
      - "3002:3000"
    environment:
      - NODE_ENV=development
      - PORT=3000
      - LOG_LEVEL=debug
    volumes:
      - ./src:/app/src
      - ./tests:/app/tests
      - ./package.json:/app/package.json
      - ./tsconfig.json:/app/tsconfig.json
    command: npm run dev

  # Test Service
  test:
    build:
      context: .
      dockerfile: Dockerfile
      target: test
    environment:
      - NODE_ENV=test
    volumes:
      - ./test-results:/app/test-results
    command: npm run test:ci

  # Uncomment below services when adding monitoring capabilities

  # # Prometheus for metrics collection
  # prometheus:
  #   image: prom/prometheus:latest
  #   ports:
  #     - "9090:9090"
  #   volumes:
  #     - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
  #   depends_on:
  #     - mars-rover-api
  #   restart: unless-stopped

  # # Grafana for visualization
  # grafana:
  #   image: grafana/grafana:latest
  #   ports:
  #     - "3001:3000"
  #   volumes:
  #     - ./grafana/provisioning:/etc/grafana/provisioning
  #   depends_on:
  #     - prometheus
  #   environment:
  #     - GF_SECURITY_ADMIN_PASSWORD=admin
  #   restart: unless-stopped
